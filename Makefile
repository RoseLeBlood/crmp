#############################################################################
# Makefile for building: crmp
# Generated by qmake (2.01a) (Qt 4.8.4) on: Do. Sep 26 18:25:13 2013
# Project:  crmp.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile crmp.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib64 -L/usr/lib/x86_64-linux-gnu -lfmodex64 -ldl -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread -lXext -lX11 -lm
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		rastream.cpp \
		rasystem.cpp \
		openstream.cpp \
		info.cpp \
		xplreader.cpp \
		pluginloader.cpp \
		dspaction.cpp \
		crmpsettings.cpp \
		xmlformat.cpp moc_mainwindow.cpp \
		moc_openstream.cpp \
		moc_info.cpp
OBJECTS       = main.o \
		mainwindow.o \
		rastream.o \
		rasystem.o \
		openstream.o \
		info.o \
		xplreader.o \
		pluginloader.o \
		dspaction.o \
		crmpsettings.o \
		xmlformat.o \
		moc_mainwindow.o \
		moc_openstream.o \
		moc_info.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/x11.prf \
		/usr/share/qt4/mkspecs/features/unix/x11inc.prf \
		/usr/share/qt4/mkspecs/features/unix/x11lib.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		crmp.pro
QMAKE_TARGET  = crmp
DESTDIR       = 
TARGET        = crmp

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_openstream.h ui_info.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: crmp.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/x11.prf \
		/usr/share/qt4/mkspecs/features/unix/x11inc.prf \
		/usr/share/qt4/mkspecs/features/unix/x11lib.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile crmp.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/unix/x11.prf:
/usr/share/qt4/mkspecs/features/unix/x11inc.prf:
/usr/share/qt4/mkspecs/features/unix/x11lib.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile crmp.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/crmp0.99.2600 || $(MKDIR) .tmp/crmp0.99.2600 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/crmp0.99.2600/ && $(COPY_FILE) --parents mainwindow.h rasystem.h crmplogger.h rastream.h customdsp.h openstream.h info.h xplreader.h version.h pluginloader.h dspaction.h pch.h crmpsettings.h xmlformat.h .tmp/crmp0.99.2600/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp rastream.cpp rasystem.cpp openstream.cpp info.cpp xplreader.cpp pluginloader.cpp dspaction.cpp crmpsettings.cpp xmlformat.cpp .tmp/crmp0.99.2600/ && $(COPY_FILE) --parents mainwindow.ui openstream.ui info.ui .tmp/crmp0.99.2600/ && (cd `dirname .tmp/crmp0.99.2600` && $(TAR) crmp0.99.2600.tar crmp0.99.2600 && $(COMPRESS) crmp0.99.2600.tar) && $(MOVE) `dirname .tmp/crmp0.99.2600`/crmp0.99.2600.tar.gz . && $(DEL_FILE) -r .tmp/crmp0.99.2600


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_openstream.cpp moc_info.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_openstream.cpp moc_info.cpp
moc_mainwindow.cpp: version.h \
		ui_mainwindow.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h \
		crmplogger.h \
		xplreader.h \
		openstream.h \
		info.h \
		pluginloader.h \
		customdsp.h \
		mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_openstream.cpp: openstream.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) openstream.h -o moc_openstream.cpp

moc_info.cpp: version.h \
		info.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) info.h -o moc_info.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_openstream.h ui_info.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_openstream.h ui_info.h
ui_mainwindow.h: mainwindow.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_openstream.h: openstream.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic openstream.ui -o ui_openstream.h

ui_info.h: info.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic info.ui -o ui_info.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		version.h \
		ui_mainwindow.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h \
		crmplogger.h \
		xplreader.h \
		openstream.h \
		info.h \
		pluginloader.h \
		customdsp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		version.h \
		ui_mainwindow.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h \
		crmplogger.h \
		xplreader.h \
		openstream.h \
		info.h \
		pluginloader.h \
		customdsp.h \
		dspaction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

rastream.o: rastream.cpp rastream.h \
		rasystem.h \
		crmpsettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rastream.o rastream.cpp

rasystem.o: rasystem.cpp rasystem.h \
		crmpsettings.h \
		crmplogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rasystem.o rasystem.cpp

openstream.o: openstream.cpp openstream.h \
		ui_openstream.h \
		mainwindow.h \
		version.h \
		ui_mainwindow.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h \
		crmplogger.h \
		xplreader.h \
		info.h \
		pluginloader.h \
		customdsp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o openstream.o openstream.cpp

info.o: info.cpp info.h \
		version.h \
		ui_info.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o info.o info.cpp

xplreader.o: xplreader.cpp xplreader.h \
		xmlformat.h \
		mainwindow.h \
		version.h \
		ui_mainwindow.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h \
		crmplogger.h \
		openstream.h \
		info.h \
		pluginloader.h \
		customdsp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xplreader.o xplreader.cpp

pluginloader.o: pluginloader.cpp pluginloader.h \
		customdsp.h \
		version.h \
		rastream.h \
		rasystem.h \
		crmpsettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pluginloader.o pluginloader.cpp

dspaction.o: dspaction.cpp dspaction.h \
		customdsp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dspaction.o dspaction.cpp

crmpsettings.o: crmpsettings.cpp crmpsettings.h \
		crmplogger.h \
		xmlformat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o crmpsettings.o crmpsettings.cpp

xmlformat.o: xmlformat.cpp xmlformat.h \
		crmplogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlformat.o xmlformat.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_openstream.o: moc_openstream.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_openstream.o moc_openstream.cpp

moc_info.o: moc_info.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_info.o moc_info.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

